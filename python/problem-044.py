#! /usr/bin/env python3

import math
from itertools import count, takewhile

description = """
Pentagon numbers
Problem 44
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""

def pentagonal(n):
  return n*(3*n - 1) // 2

def isPentagonal(x):
  a = 3
  b = -1
  c = -2 * x
  n = (-b + math.sqrt(b*b - 4*a*c)) / (2*a)
  return n == int(n)

assert([1,5,12,22,35,51] == [pentagonal(n) for n in range(1, 7)])
assert(all(isPentagonal(i) for i in [1,5,12,22,35,51,70,92,117,145]))
 
def search(): 
  for n in count(1):
    pn = pentagonal(n)  
    for m in range(n-1, 0, -1):
      pm = pentagonal(m)
      if isPentagonal(pn - pm) and isPentagonal(pn + pm):
        print('%d - %d = %d' % (pn, pm, pn - pm))
        return

search()
